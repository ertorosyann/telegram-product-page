import axios from 'axios';
import * as cheerio from 'cheerio';

export async function scrapeRecamgr(
  name: string,
  count: string,
  brand: string,
): Promise<string> {
  try {
    const searchUrl = `https://recamgr.ru/products/?search=${encodeURIComponent(name)}`;

    const response = await axios.get(searchUrl, {
      headers: {
        'User-Agent': 'Mozilla/5.0',
      },
    });

    const $ = cheerio.load(response.data);

    const product = $('.goods__item').first(); // –ü–µ—Ä–≤—ã–π —Ç–æ–≤–∞—Ä –≤ —Å–ø–∏—Å–∫–µ

    if (!product.length) {
      return `‚ùå [Recamgr] –¢–æ–≤–∞—Ä "${name}" –Ω–µ –Ω–∞–π–¥–µ–Ω.`;
    }

    const title = product.find(' .lnk').text().trim() || '–ë–µ–∑ –Ω–∞–∑–≤–∞–Ω–∏—è';

    const price =
      product.find('.price .new_price .price__value').text().trim() ||
      '–¶–µ–Ω–∞ –Ω–µ —É–∫–∞–∑–∞–Ω–∞';

    const availability =
      product.find('.product-list__stock').text().trim() || '–ù–µ—Ç –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏';

    const foundBrand =
      product.find('.product-list__brand').text().trim() || '–ë—Ä–µ–Ω–¥ –Ω–µ —É–∫–∞–∑–∞–Ω';

    // –§–∏–ª—å—Ç—Ä–∞—Ü–∏—è –ø–æ –±—Ä–µ–Ω–¥—É (–µ—Å–ª–∏ –ø–µ—Ä–µ–¥–∞–Ω)
    // if (brand && !foundBrand.toLowerCase().includes(brand.toLowerCase())) {
    //   return `‚ö†Ô∏è –ù–∞–π–¥–µ–Ω —Ç–æ–≤–∞—Ä, –Ω–æ –±—Ä–µ–Ω–¥ "${foundBrand}" –Ω–µ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É–µ—Ç –∑–∞–ø—Ä–æ—à–µ–Ω–Ω–æ–º—É "${brand}".`;
    // }

    return `üîç –ù–∞–π–¥–µ–Ω–æ –Ω–∞ Recamgr\n–ù–∞–∑–≤–∞–Ω–∏–µ: ${title}\n–ë—Ä–µ–Ω–¥: ${foundBrand}\n–¶–µ–Ω–∞: ${price}\n–ù–∞–ª–∏—á–∏–µ: ${availability}`;
  } catch (error: any) {
    return `‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞—â–µ–Ω–∏–∏ –∫ Recamgr: ${error.message}`;
  }
}
