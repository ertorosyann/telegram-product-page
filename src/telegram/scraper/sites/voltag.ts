import puppeteer from 'puppeteer';

export async function scrapeVoltag(
  name: string,
  count: string,
  brand: string,
): Promise<string> {
  const browser = await puppeteer.launch({ headless: true });
  const page = await browser.newPage();

  try {
    await page.goto('https://voltag.ru/', {
      waitUntil: 'domcontentloaded',
      timeout: 30000,
    });

    // –í–≤–æ–¥ –∞—Ä—Ç–∏–∫—É–ª–∞ –≤ –ø–æ–∏—Å–∫
    await page.type('#header_search_input', name);
    await page.keyboard.press('Enter');

    // ‚ùó –ù–ï –ñ–î–ò –ù–ê–í–ò–ì–ê–¶–ò–Æ
    // –í–º–µ—Å—Ç–æ —ç—Ç–æ–≥–æ ‚Äî –∂–¥—ë–º –ø–æ—è–≤–ª–µ–Ω–∏—è —Ç–∞–±–ª–∏—Ü—ã —Å —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞–º–∏
    const time1 = performance.now();
    await page.waitForSelector('.catalog_group', { timeout: 15000 });

    const result = await page.evaluate(
      (name, count, brand) => {
        const firstRow = document.querySelector('.catalog_group');
        if (!firstRow) return '‚ùå  [Voltag] –ù–∏—á–µ–≥–æ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ.';

        const title =
          document.querySelector('header h1')?.textContent?.trim() ||
          '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ';

        const brandElement =
          document.querySelector('td.mnfr')?.textContent?.trim() ||
          '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ';

        const price =
          firstRow.querySelector('.catalog_group_price')?.textContent?.trim() ||
          '–ù–µ —É–∫–∞–∑–∞–Ω–∞';

        const quantity =
          firstRow
            .querySelector('catalog_group_quantity')
            ?.textContent?.trim() || '0';

        if (title.toLowerCase().includes(name.toLowerCase())) {
          //   if (!brand || findBrand.toLowerCase().includes(brand.toLowerCase())) {
          // if (available >= requested) {
          return `üîç –ù–∞–π–¥–µ–Ω–æ –Ω–∞ b2b.ixora-auto.ru\nCatalog Number:${name}\n–ù–∞–∑–≤–∞–Ω–∏–µ: ${title}\n–ë—Ä–µ–Ω–¥: ${brandElement}\n–¶–µ–Ω–∞: ${price}\n–ù–∞ —Å–∫–ª–∞–¥–µ: ${quantity} —à—Ç.`;
          // } else {
          //   return `‚úÖ –ù–∞–π–¥–µ–Ω–æ –Ω–∞ Ixora, –Ω–æ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ\n–ù–∞–∑–≤–∞–Ω–∏–µ: ${title}\n–ë—Ä–µ–Ω–¥: ${findBrand}\n–¶–µ–Ω–∞: ${price}\n–ù–∞ —Å–∫–ª–∞–¥–µ: ${available} —à—Ç.`;
          // }
          //   }
        }

        return `‚ùå [Voltag] –¢–æ–≤–∞—Ä "${name}" –Ω–µ –Ω–∞–π–¥–µ–Ω –∏–ª–∏ –Ω–µ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É–µ—Ç –±—Ä–µ–Ω–¥—É.`;
      },
      name,
      count,
      brand,
    );
    // console.log(performance.now() - time1);

    await browser.close();
    return result;
  } catch (error: unknown) {
    if (error instanceof Error) {
      return `‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞—â–µ–Ω–∏–∏ –∫ Voltag: ${error.message}`;
    }
    return `‚ùå –ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞—â–µ–Ω–∏–∏ –∫ Voltag`;
  }
}
