import { Injectable } from '@nestjs/common';
import {
  InjectBot,
  Start,
  Help,
  On,
  Ctx,
  Update,
  Action,
} from 'nestjs-telegraf';
import { Telegraf } from 'telegraf';
import { Context } from 'src/types/context.interface';
import { StartHandler } from './handlers/start.handler';
import { TextHandler } from './handlers/text.handler';
import { HelpHandler } from './handlers/help.handler';
import { YandexDiskService } from '../yandex/yandex-disk.service';
import { HttpService } from '@nestjs/axios';
import { DocumentHandler } from './handlers/document.handler';
import { UsersService } from './authorization/users.service';

@Injectable()
@Update()
export class TelegramService {
  constructor(
    @InjectBot() private readonly bot: Telegraf<Context>,
    private readonly yandexDiskService: YandexDiskService,
    private readonly httpService: HttpService,
    private readonly startHandler: StartHandler,
    private readonly textHandler: TextHandler,
    private readonly helpHandler: HelpHandler,
    private readonly documentHandler: DocumentHandler,
    private readonly usersService: UsersService, // ‚úÖ inject it
  ) {}

  @Start()
  async onStart(@Ctx() ctx: Context) {
    await this.startHandler.handle(ctx);
  }

  @Help()
  async onHelp(@Ctx() ctx: Context) {
    await this.helpHandler.handle(ctx);
  }

  @On('document')
  async onDocument(@Ctx() ctx: Context) {
    if (ctx.session.step === 'document') {
      await this.documentHandler.handle(ctx);
    } else {
      await ctx.reply(
        '‚ùó –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, —Å–Ω–∞—á–∞–ª–∞ –≤—ã–±–µ—Ä–∏—Ç–µ "üìÇ –ó–∞–≥—Ä—É–∑–∏—Ç—å —Ñ–∞–π–ª" –≤ –º–µ–Ω—é –Ω–∏–∂–µ.',
      );
      await this.startHandler.handle(ctx); // –ø–æ–≤—Ç–æ—Ä–Ω–æ –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –º–µ–Ω—é
    }
  }

  @On('text')
  async onText(@Ctx() ctx: Context) {
    if (
      ctx.session.step === 'single_part_request' ||
      ctx.session.step === 'add_user'
    ) {
      await this.textHandler.handle(ctx); // –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –≤–≤–æ–¥
    } else {
      await ctx.reply(
        '‚ùó –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, —Å–Ω–∞—á–∞–ª–∞ –≤—ã–±–µ—Ä–∏—Ç–µ "üìù –ó–∞–ø—Ä–æ—Å –æ–¥–Ω–æ–π –∑–∞–ø—á–∞—Å—Ç–∏" –≤ –º–µ–Ω—é –Ω–∏–∂–µ.',
      );
      await this.startHandler.handle(ctx); // –ø–æ–≤—Ç–æ—Ä–Ω–æ –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –º–µ–Ω—é
    }
  }

  // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –∫–Ω–æ–ø–∫–∏ 'üìù Single Part'
  @Action('single_part_request')
  async onSingle(@Ctx() ctx: Context) {
    ctx.session.step = 'single_part_request'; // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Ç–µ–∫—É—â–∏–π —à–∞–≥ —Å–µ—Å—Å–∏–∏
    await ctx.answerCbQuery(); // –£–±–∏—Ä–∞–µ–º "loading" —É –∫–Ω–æ–ø–∫–∏
    await ctx.reply('–í–≤–µ–¥–∏—Ç–µ –Ω–æ–º–µ—Ä –¥–µ—Ç–∞–ª–∏ –¥–ª—è –ø–æ–∏—Å–∫–∞:');
  }
  @Action('add_user')
  async addUser(@Ctx() ctx: Context) {
    ctx.session.step = 'add_user';
    await ctx.answerCbQuery();
    await ctx.reply('–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.');
  }

  // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –∫–Ω–æ–ø–∫–∏ 'üìÇ Upload File'
  @Action('document')
  async onFile(@Ctx() ctx: Context) {
    ctx.session.step = 'document'; // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —à–∞–≥ —Å–µ—Å—Å–∏–∏ –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏ —Ñ–∞–π–ª–∞
    await ctx.answerCbQuery(); // –£–±–∏—Ä–∞–µ–º "loading" —É –∫–Ω–æ–ø–∫–∏
    await ctx.reply('–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ—Ç–ø—Ä–∞–≤—å—Ç–µ Excel —Ñ–∞–π–ª.');
  }
}
