import { Injectable } from '@nestjs/common';
import { Context } from 'src/types/context.interface';
import { Markup } from 'telegraf';

@Injectable()
export class StartHandler {
  private readonly templateLink = process.env.YANDEX_LINK || '';

  async handle(ctx: Context) {
    const text = [
      'üëã *–î–æ–±—Ä–æ‚ÄØ–ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –±–æ—Ç–∞ –ø–æ –ø–æ–∏—Å–∫—É —Ü–µ–Ω –Ω–∞ –∑–∞–ø—á–∞—Å—Ç–∏\\!*',
      '',
      '–í—ã–±–µ—Ä–∏—Ç–µ, —Å —á–µ–≥–æ —Ö–æ—Ç–∏—Ç–µ –Ω–∞—á–∞—Ç—å:',
    ].join('\n');

    await ctx.reply(text, {
      parse_mode: 'MarkdownV2',
      ...Markup.inlineKeyboard([
        [Markup.button.url('üì• –°–∫–∞—á–∞—Ç—å —à–∞–±–ª–æ–Ω Excel', this.templateLink)],
        [
          Markup.button.callback(
            'üìù –ó–∞–ø—Ä–æ—Å –æ–¥–Ω–æ–π –∑–∞–ø—á–∞—Å—Ç–∏',
            'single_part_request',
          ),
        ],
        [Markup.button.callback('üìÇ –ó–∞–≥—Ä—É–∑–∏—Ç—å —Ñ–∞–π–ª', 'document')],
      ]),
    });
  }
}
